---
import Header from "./Header.astro";
import Footer from "./Footer.astro";
import Content from "./Content.astro";

interface Frontmatter {
    name: string;
    overview: Overview;
    structure: Overview;
    geology: Overview;
    rotation: string;
    revolution: string;
    radius: string;
    temperature: string;
    images: Images;
}

interface Images {
    planet: string;
    internal: string;
    geology: string;
}

interface Overview {
    content: string;
    source: string;
}
const planet = Astro.props.planet as Frontmatter;
const lowercasePlanet = planet.name.toLowerCase();

const planetClass = "planet-".concat(lowercasePlanet);
---

<main class={planetClass}>
    <Header />
    <article>
        <div class="planet-space1"></div>
        <Content
            name={planet.name}
            overview={planet.overview}
            geology={planet.geology}
            structure={planet.structure}
            images={planet.images}
        />
        <Footer
            rotation={planet.rotation}
            revolution={planet.revolution}
            radius={planet.radius}
            temperature={planet.temperature}
        />
        <div class="planet-space2"></div>
    </article>
</main>

<style>
    main {
        height: max(100vh, 100%);
        width: 100%;
        background-image: url(../svg/background-stars.svg);
        display: flex;
        flex-direction: column;
    }

    /* Grid and areas */
    article {
        --article-width: 375px;
        width: 100%;
        display: grid;
        grid-template-areas:
            "space1 options  space2"
            "space1 figure  space2"
            "space1 content space2"
            "space1 footer  space2";
        grid-template-columns: 0 375px 0;
        grid-template-rows: 50px 375px 235px calc(260px + 28px);
        margin-bottom: 47px;

        place-items: center;
    }

    .planet-space {
        grid-area: space;
    }

    @media (min-width: 768px) {
        article {
            --article-width: 689px;
            grid-template-columns:
                40px calc(var(--article-width) / 2) calc(
                    var(--article-width) / 2
                )
                40px;
            grid-template-rows: 460px 253px calc(88px + 27px);
            /* grid-template-rows: auto auto auto auto; */
            padding-inline: calc(100vw / 2 - 40px - var(--article-width) / 2);
            height: 829px;
            width: var(--article-width);
            grid-template-areas:
                "space1 figure figure space2"
                "space1 content options space2"
                "space1 footer footer  space2";
            padding-top: 0px;
        }
        main {
            margin-bottom: 36px;
        }
    }
    @media (min-width: 1440px) {
        main {
            height: 100vh;

            margin-bottom: 56px;
        }

        article {
            --article-width: 1440px;
            justify-content: center;
            align-self: center;

            grid-template-columns: 165px 760px 350px 165px;
            grid-template-rows: 326px 176px calc(87px + 128px);
            padding-top: 126px;
            height: 882px;
            grid-template-areas:
                "space1 figure content space2"
                "space1 figure options space2"
                "space1 footer footer  space2";
        }
    }
</style>
